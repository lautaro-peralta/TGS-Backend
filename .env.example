# ============================================================================
# TGS BACKEND - ENVIRONMENT CONFIGURATION
# ============================================================================
# Este archivo es una plantilla para configurar las variables de entorno.
# 
# INSTRUCCIONES:
# 1. Copia este archivo según tu entorno:
#    - Para desarrollo: .env.development
#    - Para producción: .env.production
#    - Para testing: .env.test
# 
# 2. Completa las variables requeridas (marcadas como REQUIRED)
# 3. Ajusta las opcionales según tus necesidades
# ============================================================================

# ============================================================================
# APPLICATION
# ============================================================================

# Entorno de ejecución
NODE_ENV=development

# Puerto del servidor
PORT=3000

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# Host de la base de datos MySQL
# - Local: localhost
# - Docker: mysql (nombre del servicio)
DB_HOST=localhost

# Puerto de la base de datos
# - Local con docker-compose: 3307 (puerto mapeado)
# - Docker interno: 3306
# - MySQL estándar: 3306
DB_PORT=3307

# Usuario de la base de datos
DB_USER=dsw

# Contraseña de la base de datos
DB_PASSWORD=dsw

# Nombre de la base de datos
DB_NAME=tpdesarrollo

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================

# Secreto para firmar JWT tokens (REQUIRED)
# IMPORTANTE: Cambia esto en producción por un valor aleatorio y seguro
# Puedes generar uno con: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=Th1sIsMyN3wSupaDupaS3cureS3cr3ttt

# Tiempo de expiración del access token
# Ejemplos: 15m, 1h, 7d
JWT_EXPIRES_IN=15m

# ============================================================================
# LOGGING
# ============================================================================

# Nivel de logs
# Opciones: debug, info, warn, error
LOG_LEVEL=info

# Nivel de logs de seguridad
SECURITY_LOG_LEVEL=warn

# ============================================================================
# SECURITY & CORS
# ============================================================================

# Orígenes permitidos para CORS (separados por coma)
# Desarrollo: http://localhost:3000
# Producción: https://tu-dominio.com
ALLOWED_ORIGINS=http://localhost:3000

# Confiar en proxy (requerido para Nginx, Docker, etc.)
TRUST_PROXY=false

# Habilitar headers de seguridad (helmet)
ENABLE_SECURITY_HEADERS=true

# Habilitar rate limiting
ENABLE_RATE_LIMITING=true

# Tiempo máximo de cache para CORS (en segundos)
CORS_MAX_AGE=86400

# ============================================================================
# REDIS CONFIGURATION (OPTIONAL)
# ============================================================================

# Habilitar Redis (false = usa cache en memoria)
# IMPORTANTE: Redis es opcional, la app funciona sin él
REDIS_ENABLED=false

# Host de Redis
# - Local: localhost
# - Docker: redis (nombre del servicio)
REDIS_HOST=localhost

# Puerto de Redis
REDIS_PORT=6379

# Contraseña de Redis (opcional)
# REDIS_PASSWORD=

# Base de datos Redis (0-15)
REDIS_DB=0

# ============================================================================
# EMAIL SERVICE (SMTP) - Para verificación de emails
# ============================================================================

SMTP_HOST=sandbox.smtp.mailtrap.io
SMTP_PORT=2525
SMTP_SECURE=false
SMTP_USER=7e82d1c2e3fe08
SMTP_PASS=a85e50179ca2cf
SMTP_FROM=noreply@tgs-system.com

# ============================================================================
# EMAIL VERIFICATION SETTINGS
# ============================================================================

# Requerir verificación de email obligatoria para iniciar sesión
# - true: Los usuarios DEBEN verificar su email antes de poder iniciar sesión (PRODUCCIÓN)
# - false: Los usuarios pueden iniciar sesión sin verificar email (DEMO/EVALUACIÓN)
#
# IMPORTANTE: Para evaluación académica o demos, puedes establecer esto en false
# para que el profesor/evaluador no tenga que verificar emails reales.
# En producción, SIEMPRE debe estar en true.
EMAIL_VERIFICATION_REQUIRED=true

# ============================================================================
# FRONTEND CONFIGURATION
# ============================================================================

# URL del frontend (para links en emails)
# Desarrollo: http://localhost:4200
# Producción: https://tu-frontend.com
FRONTEND_URL=http://localhost:4200

# ============================================================================
# DOCKER CONFIGURATION (OPTIONAL)
# ============================================================================

# Indica si la app está corriendo en un contenedor Docker
# Se usa para ajustar automáticamente hosts y puertos
DOCKER_CONTAINER=false
